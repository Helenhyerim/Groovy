<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="yuhr">
	
	<!-- // 부서명을 가져오기 위함  -->
	<select id="getDepts" resultType="com.spring.groovy.model.DepartmentVO">
		select PK_DEPTNUM, DEPTNAMEKOR
		from TBL_DEPARTMENT
		order by pk_deptnum
	</select>
	
	<!-- // 직위명을 가져오기 위함  -->
	<select id="getSpots" resultType="com.spring.groovy.model.SpotVO">
		select PK_SPOTNUM, SPOTNAMEKOR
		from TBL_SPOT
		order by PK_SPOTNUM
	</select>
	
	<select id="empnumCheck" parameterType="HashMap" resultType="String">
		select pk_empnum
		from tbl_employee
		where ${checkColumn} = #{checkValue}
	</select>
	
	<insert id="addEmp" parameterType="com.spring.groovy.model.EmployeeVO">
		insert into TBL_EMPLOYEE(PK_EMPNUM, PWD, NAME, ADDRESS, DETAILADDRESS, POSTCODE, 
								PHONE, EMAIL, BIRTHDAY, GENDER, REGISTERDAY, STARTDAY, RESIGNATIONSTATUS, 
								RESIGNATIONDAY, FK_VSTATUS, FK_DEPTNUM, FK_SPOTNUM, EMPPICTURENAME, SALARY, 
								LASTPWDCHANGEDATE, EMPPICTUREFILENAME)
		values(#{pk_empnum}, #{pwd}, #{name}, #{address}, #{detailaddress}, #{postcode}, 
			   #{phone}, #{email}, #{birthday}, #{gender}, sysdate, #{startday}, 0, 
			   '', 0, #{fk_deptnum}, #{fk_spotnum}, #{emppicturename}, #{salary}, 
			   sysdate, #{emppicturefilename}    )
	</insert>
	
	<select id="getEmps" parameterType="HashMap" resultType="com.spring.groovy.model.EmployeeVO">
		
		select  pk_empnum, name, address, detailaddress, postcode, 
		        phone, email, birthday, gender, registerday, 
		        startday, resignationstatus,  
		        resignationday,  fk_vstatus,     
		        emppicturename,  salary, lastpwdchangedate, emppicturefilename,
		        spotnamekor, deptnamekor
		        from
        (
			select  row_number() over(order by pk_empnum desc) AS rno,
					pk_empnum, name, address, detailaddress, postcode, 
			        phone, email, birthday, gender, registerday, 
			        startday, resignationstatus,  
			        resignationday,  fk_vstatus,     
			        emppicturename,  salary, lastpwdchangedate, emppicturefilename,
			        spotnamekor, deptnamekor
			from
			(
				SELECT  E.pk_empnum, E.name, E.address, E.detailaddress, E.postcode, 
				        E.phone, E.email, E.birthday, E.gender, E.registerday, 
				        to_char(E.startday, 'yyyy-mm-dd') as startday, E.resignationstatus,  
				        E.resignationday,  E.fk_vstatus,     
				        E.emppicturename,  E.salary, E.lastpwdchangedate, E.emppicturefilename,
				        s.spotnamekor, s.pk_spotnum,
				        d.deptnamekor, d.pk_deptnum
				from tbl_employee E
				JOIN TBL_SPOT S 
				ON E.fk_spotnum = S.pk_spotnum
				JOIN TBL_DEPARTMENT D 
				ON E.fk_deptnum = D.pk_deptnum
			) V
			where 1=1
			
			
			<if test="dept != '' ">
				and pk_deptnum = #{dept} 
			</if>
			<if test="spot != '' ">
				and pk_spotnum = #{spot}
			</if>
			<if test="date_start != '' ">
				and startday between #{date_start} and #{date_end}
			</if>
			<if test="resign_status != '' ">
				and resignationstatus = #{resign_status}
			</if>
			<if test="search_item == 'name' ">
				and ${search_item} like '%'||#{search_value}||'%'
			</if>
			<if test="search_item == 'pk_empnum' ">
				and ${search_item} = #{search_value}
			</if>
			
			<if test="select_order == 'pk_empnum desc' ">
				order by pk_empnum desc
			</if>
			<if test="select_order == 'name asc' ">
				order by name asc
			</if>
			<if test="select_order == 'pk_spotnum desc' ">
				order by pk_spotnum desc
			</if>
			<if test="select_order == 'startday desc' ">
				order by startday desc
			</if>
			
		) V2
		where rno between #{startRno} and #{endRno}
		
	</select>
	
	
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		
		select  count(*)
			from
			(
				SELECT  E.pk_empnum, E.name, E.address, E.detailaddress, E.postcode, 
				        E.phone, E.email, E.birthday, E.gender, E.registerday, 
				        to_char(E.startday, 'yyyy-mm-dd') as startday, E.resignationstatus,  
				        E.resignationday,  E.fk_vstatus,     
				        E.emppicturename,  E.salary, E.lastpwdchangedate, E.emppicturefilename,
				        s.spotnamekor, s.pk_spotnum,
				        d.deptnamekor, d.pk_deptnum
				from tbl_employee E
				JOIN TBL_SPOT S 
				ON E.fk_spotnum = S.pk_spotnum
				JOIN TBL_DEPARTMENT D 
				ON E.fk_deptnum = D.pk_deptnum
			) V
			where 1=1
			<if test="dept != ''">
				and pk_deptnum = #{dept} 
			</if>
			<if test="spot != ''">
				and pk_spotnum = #{spot}
			</if>
			<if test="date_start != ''">
				and startday between #{date_start} and #{date_end}
			</if>
			<if test="resign_status != ''">
				and resignationstatus = #{resign_status}
			</if>
			<if test="search_item == 'name'">
				and ${search_item} like '%'||#{search_value}||'%'
			</if>
			<if test="search_item == 'pk_empnum'">
				and ${search_item} = #{search_value}
			</if>
	</select>
	
	<select id="getOneEmp" parameterType="String" resultType="com.spring.groovy.model.EmployeeVO">
		SELECT  E.pk_empnum, E.name, E.address, E.detailaddress, E.postcode, 
		        E.phone, E.email, to_char(E.birthday, 'yyyy-mm-dd') as birthday, E.gender, E.registerday, 
		        to_char(E.startday, 'yyyy-mm-dd') as startday, E.resignationstatus,  
		        E.resignationday,  E.fk_vstatus,     
		        E.emppicturename,  E.salary, E.lastpwdchangedate, E.emppicturefilename,
		        s.spotnamekor, s.pk_spotnum,
		        d.deptnamekor, d.pk_deptnum
		from tbl_employee E
		JOIN TBL_SPOT S 
		ON E.fk_spotnum = S.pk_spotnum
		JOIN TBL_DEPARTMENT D 
		ON E.fk_deptnum = D.pk_deptnum
		
		where pk_empnum = #{pk_empnum}
	</select>
	
	<select id="getCommStatus" resultType="com.spring.groovy.model.CommuteStatusVO">
		select pk_commute_statusnum, fk_empnum, todayworkedtime,
			   late, early_endcheck, no_endcheck, no_workday
		from tbl_commute_status
	</select>
	
	<insert id="startWork" parameterType="String">
		insert into tbl_commute(pk_commutenum, fk_empnum, startwork)
		values(commuteseq.nextval, #{pk_empnum}, sysdate)
	</insert>
	
	<insert id="status_late" parameterType="String">
		 insert into tbl_commute_status(pk_commute_statusnum, fk_empnum, late)
		values(commute_statusseq.nextval, #{pk_empnum}, 1)
	</insert>
	
	<select id="isClickedStartBtn" parameterType="String" resultType="int">
		select count(*)
	   	from tbl_commute
	   	where fk_empnum = #{pk_empnum} and to_char(startwork, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd')
	</select>
	
	<update id="endWork" parameterType="String" >
		update TBL_COMMUTE set endwork = sysdate
    	where fk_empnum = #{pk_empnum} and to_char(startwork, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd')
	</update>
	
	<update id="status_early_endcheck" parameterType="String" >
		update tbl_commute_status set EARLY_ENDCHECK = 1
    	where fk_empnum = #{pk_empnum} and to_char(today, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd')
	</update>
	
	<update id="status_no_endcheck" parameterType="String" >
		update tbl_commute_status set NO_ENDCHECK = 1
    	where fk_empnum = #{pk_empnum} and to_char(today, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd')
	</update>
	
	<insert id="status_no_workday" parameterType="String" >
		insert into tbl_commute_status(pk_commute_statusnum, fk_empnum, NO_WORKDAY)
		values(commute_statusseq.nextval, #{pk_empnum}, 1)
	</insert>
	
	
	<resultMap type="HashMap" id="commuteStatusMap">
		<result property="pk_empnum" 			column="pk_empnum" 				javaType="String" />
		<result property="name" 				column="name" 					javaType="String" />
		<result property="deptnamekor" 			column="deptnamekor" 			javaType="String" />
		<result property="resignationstatus" 	column="resignationstatus" 		javaType="String" />
		<result property="total_late" 			column="total_late" 			javaType="String" />
		<result property="total_early_endcheck" column="total_early_endcheck" 	javaType="String" />
		<result property="total_no_endcheck" 	column="total_no_endcheck" 		javaType="String" />
		<result property="total_no_workday" 	column="total_no_workday" 		javaType="String" />
		<result property="totalworkingdays" 	column="totalworkingdays" 		javaType="String" />
		<result property="totalworkedtime" 	column="totalworkedtime" 			javaType="String" />
	</resultMap>
	
	<select id="getCommuteStatusInfo" resultMap="commuteStatusMap">
	    SELECT pk_empnum 
	         , name 
	         , deptnamekor 
	         , resignationstatus 
	         , total_late 
	         , total_early_endcheck 
	         , total_no_endcheck 
	         , total_no_workday  
	         , totalworkingdays 
	         , TOTALWORKED_DAY||'일'|| ASTOTALWORKED_HH||'시'|| TOTALWORKED_MI||'분'|| TOTALWORKED_SS||'초' as totalworkedtime
	    FROM
	    (
	      select name, pk_empnum, fk_deptnum
	           , case when RESIGNATIONSTATUS in(0) then '재직' else '퇴직' end AS RESIGNATIONSTATUS
	      from tbl_employee 
	      
	    ) E
	    JOIN
	    (
	      select fk_empnum
	            , sum(LATE) as total_late
	            , sum(EARLY_ENDCHECK) as total_EARLY_ENDCHECK
	            , sum(NO_ENDCHECK) as total_NO_ENDCHECK
	            , sum(NO_WORKDAY) as total_NO_WORKDAY
	      from tbl_commute_status
	      group by fk_empnum
	    ) S
	    ON E.pk_empnum = S.fk_empnum
	    JOIN 
	    (
	      select PK_DEPTNUM, DEPTNAMEKOR
	      from TBL_DEPARTMENT
	    ) D
	    on D.PK_DEPTNUM = E.fk_deptnum
	    JOIN 
	    (
	      select fk_empnum, count(*) as totalworkingdays
	      from TBL_COMMUTE
	      group by fk_empnum
	    ) C
	    on c.fk_empnum = E.pk_empnum
	    JOIN 
	    (
	      select FK_EMPNUM, TOTALWORKED_DAY, ASTOTALWORKED_HH, TOTALWORKED_MI, TOTALWORKED_SS
	      from totalworkedtimecalc
	    ) W
	    on c.fk_empnum = W.FK_EMPNUM
	</select>
	
	<update id="todayworkedtime" parameterType="String">
		update tbl_commute_status S set TODAYWORKEDTIME = (select v.hh||'시간 ' 
	                       || case when length(v.mm) = 1 then '0'||to_char(v.mm) else to_char(v.mm) end 
	                       ||'분 '
	                       || case when length(v.ss) = 1 then '0'||to_char(v.ss) else to_char(v.ss) end
	                       ||'초'
	                       as workedtime
		                from
		                (    
		                    select trunc( (ENDWORK - STARTWORK)*24) as hh
		                           , trunc( (ENDWORK - STARTWORK)*24*60) - (trunc( (ENDWORK - STARTWORK)*24))*60 as mm
		                           , trunc( (ENDWORK - STARTWORK)*24*60*60, 2) - (trunc( (ENDWORK - STARTWORK)*24*60))*60 as ss
		                    from tbl_commute
		                    where fk_empnum = #{pk_empnum} and to_char(startwork, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd')   
		                ) v 
		            )
		where S.fk_empnum = #{pk_empnum} and to_char(S.today, 'yyyy-mm-dd') = to_char(sysdate, 'yyyy-mm-dd')    
		
	</update>
	
	
	
	
	
	
</mapper>